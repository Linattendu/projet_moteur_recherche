name: Run Tests v2

on:
  push:
    branches:
      - v2

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Build Docker image with Python 3.1
      run: |
        echo "FROM ubuntu:22.04" > Dockerfile
        echo "RUN apt-get update && apt-get install -y \\" >> Dockerfile
        echo "    wget build-essential zlib1g-dev libssl-dev libreadline-dev libsqlite3-dev && \\" >> Dockerfile
        echo "    wget https://www.python.org/ftp/python/3.1.5/Python-3.1.5.tgz && \\" >> Dockerfile
        echo "    tar -xvf Python-3.1.5.tgz && cd Python-3.1.5 && \\" >> Dockerfile
        echo "    ./configure && make && make altinstall" >> Dockerfile
        echo "CMD [\\"python3.1\\"]" >> Dockerfile
        docker build -t python3.1-env .

    - name: Verify Python version in Docker
      run: docker run python3.1-env python3.1 --version

    - name: Run tests in Docker
      env:
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
      run: |
        docker run -v $(pwd):/app -w /app python3.1-env bash -c "
          python3.1 -m pip install --upgrade pip &&
          python3.1 -m pip install -r v2/requirements.txt &&
          cd v2 && python3.1 -m pytest tests/
        "
